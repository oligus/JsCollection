{"name":"JsCollection","tagline":"Simplify your object array","body":"JsCollection\r\n============\r\n[![Build Status](https://travis-ci.org/oligus/JsCollection.svg?branch=master)](https://travis-ci.org/oligus/JsCollection)\r\n\r\nJs Collection is a simple object collection class used to simplify using array of objects.\r\n\r\nUsage\r\n-----\r\n\r\n**Construct**\r\n```javascript\r\nmyCollection = new JsCollection();\r\n```\r\n\r\n####Add elements to your collection\r\n#####Within a loop\r\nAdds a single object at the end of the array collection\r\n\r\n```javascript\r\nmyCollection.addElement(myObject);\r\n```\r\n#####Complete array\r\nYou can set an array of objects directly\r\n```javascript\r\nmyCollection.setArray(myArrayOfObjects);\r\n```\r\n####Iteration\r\nYou can iterate the collection in multiple ways:\r\n\r\n**each**\r\n```javascript\r\nmyCollection.each(function(key, element) {}):\r\n```\r\n\r\n**while**\r\n```javascript\r\nwhile(myCollection.hasNext()) {\r\n    element = testCollection.next();\r\n}\r\n```\r\n**for**\r\n```javascript\r\nfor(var i = 0; i < testCollection.count(); i++) {\r\n    element = testCollection.getByKey(i);\r\n}\r\n```\r\n**Iterator functions**\r\n\r\n\r\n| Function | Description |\r\n| :------- | :---------- |\r\n| `count()`  | Returns number of objects in the collection |\r\n| `position()`  | Returns the current iterator position |\r\n| `first()`  | Returns the first element in the collection |\r\n| `last()`  | Returns the last element in the collection |\r\n| `current()`  | Returns current element according to the iterator position |\r\n| `next()`  | Returns current element then increases the iterator position by one |\r\n| `hasNext()`  | Returns true or false if the collection has more elements |\r\n| `rewind()`| Resets the iterator position and returns the first element in the collection |\r\n\r\n####Ordering\r\n```javascript\r\nmyCollection.orderBy('name', 'desc');\r\n```\r\n\r\n### Functions\r\n - `addElement({Object})`: Add an object to the object collection\r\n - `getElements()`: Get all objects currently in the collection\r\n - `count()`: Returns number of objects in the collection\r\n - `getKeys()`: Returns an array of the collection keys\r\n - `containsKey(key)`: Check if a key exists or not\r\n - `getByKey(key)`: Get a object by key\r\n - `remove(key)`: Remove a object by key\r\n - `replace(key, {Object})`: Replace object with key\r\n - `first()`: Get the first object in the collection\r\n - `last()`: Get the last object in the collection\r\n - `position()`: Returns current iterator position\r\n - `next()`: Returns current object and increases the iterator\r\n - `hasNext()`: Returns true or false if the collection has more objects\r\n - `current()`: Returns current object\r\n - `rewind()`: Resets the iterator\r\n - `clear()`: Clear the collection, remove all items\r\n - `setArray()`: Fill the collection with a array\r\n - `each(callback(key, value))`: Iterate through all elements\r\n - `orderBy(property, direction)`: Order elements by object property and direction\r\n \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}