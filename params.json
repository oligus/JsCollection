{"name":"JsCollection","tagline":"Simplify your object array","body":"Js Collection is a simple object collection class, that is an array of objects.\r\n\r\n###Usage\r\n\r\n**Construct**\r\n```javascript\r\nmyCollection = new Collection();\r\n```\r\n\r\n**Ordering**\r\n```javascript\r\nmyCollection = new Collection();\r\nmyCollection.setArray(myArrayOfObjects);\r\n\r\nmyCollection.orderBy('name', 'desc');\r\n\r\nmyCollection.each(function(key, value) {\r\n    ...\r\n});\r\n```\r\n\r\n### Functions\r\n - `addElement({Object})`: Add an object to the object collection\r\n - `getElements()`: Get all objects currently in the collection\r\n - `count()`: Returns number of objects in the collection\r\n - `getKeys()`: Returns an array of the collection keys\r\n - `containsKey(key)`: Check if a key exists or not\r\n - `getByKey(key)`: Get a object by key\r\n - `remove(key)`: Remove a object by key\r\n - `replace(key, {Object})`: Replace object with key\r\n - `first()`: Get the first object in the collection\r\n - `last()`: Get the last object in the collection\r\n - `position()`: Returns current iterator position\r\n - `next()`: Returns current object and increases the iterator\r\n - `hasNext()`: Returns true or false if the collection has more objects\r\n - `current()`: Returns current object\r\n - `rewind()`: Resets the iterator\r\n - `clear()`: Clear the collection, remove all items\r\n - `setArray()`: Fill the collection with a array\r\n - `each(callback(key, value))`: Iterate through all elements\r\n - `orderBy(property, direction)`: Order elements by object property and direction\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}